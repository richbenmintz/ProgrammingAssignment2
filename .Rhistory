source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2)))
makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
x <-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
x
x$get()
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$get*()
y$get()
x$get()
x$set
x$set(matrix(c(1,2,3,4), nrow=2, ncol=2))
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y
y$get()
y
x$set()
x<-1
x
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y
y$setSolveMatrix()
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y
y$get()
y$setSolveMatrix()
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$setSolveMatrix()
y$get()
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$get()
y$getInverse()
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$getInverse()
y$get()
y$getInverse()
y$set
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$getInverse()
y$get()
y$setInverse()
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
cacheSolve(y)
y
y$get()
cacheSolve(y)
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$get()
cacheSolve(y)
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$get()
cacheSolve(y)
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
y<-makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
y$get()
cacheSolve(y)
y$getInverse()
cacheSolve(y)
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2)) # Modify existing matrix
y$set(matrix(c(0,5,99,66), nrow=2, ncol=2)) # Modify existing matrix
cacheSolve(amatrix)
cacheSolve(y)
y$get()
y$getInverse()
source('~/GitHub/myGit/ProgrammingAssignment2/ProgrammingAssignment2/cachematrix.R')
